# + ------------------------------- +
# | Exports                         |
# + ------------------------------- +
export NVM_DIR="$HOME/.nvm"
export GROOVY_HOME=/usr/local/opt/groovy/libexec
export KUB_HOME="$HOME/.kube"
export PATH=$(brew --prefix coreutils)/libexec/gnubin:$PATH

if [ -r "$HOME/utils/bin" ]; then
  export PATH=$HOME/utils/bin:$PATH
fi
# ██████████████████████████████████████████████████████████

# Sourcing
# --------
[ -r "$NVM_DIR" ] && source "$NVM_DIR/nvm.sh"

[ -f $HOME/.sdkman/bin/sdkman-init.sh ] && source $HOME/.sdkman/bin/sdkman-init.sh
# ██████████████████████████████████████████████████████████

if [ "${TERM_PROGRAM}" = "iTerm.app" ]; then
  function iterm2_set_user_var() {
      printf "\033]1337;SetUserVar=%s=%s\007" "$1" $(printf "%s" "$2" | base64 | tr -d '\n')
  }

  _kubectx_cmd=$(command -v kubectx)
  _kubens_cmd=$(command -v kubens)

  if [ ! -z $_kubectx_cmd ]; then
    function _iterm2_set_current_kubectx() {
      iterm2_set_user_var kubeContext $(kubectl config current-context);
    }

    function kubectx() {
      $_kubectx_cmd "$@" && _iterm2_set_current_kubectx;
    }

    _iterm2_set_current_kubectx
  fi

  if [ ! -z $_kubens_cmd ]; then
    function _iterm2_set_current_kubens() {
      iterm2_set_user_var kubeNamespace $(kubectl config view --minify --output 'jsonpath={..namespace}');
    }

    function kubens() {
      $_kubens_cmd "$@" && _iterm2_set_current_kubens;
    }

    _iterm2_set_current_kubens
  fi
fi
# ██████████████████████████████████████████████████████████

# xcode-select --install